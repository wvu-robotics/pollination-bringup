j2n6s300:
  effort_finger_trajectory_controller:
    constraints:
      goal_time: 1.0
      j2n6s300_joint_finger_1:
        goal: 0.02
        trajectory: 0.05
      j2n6s300_joint_finger_2:
        goal: 0.02
        trajectory: 0.05
      j2n6s300_joint_finger_3:
        goal: 0.02
        trajectory: 0.05
      stopped_velocity_tolerance: 0.02
    gains:
      j2n6s300_joint_finger_1:
        d: 0
        i: 0
        i_clamp: 1
        p: 10
      j2n6s300_joint_finger_2:
        d: 0
        i: 0
        i_clamp: 1
        p: 10
      j2n6s300_joint_finger_3:
        d: 0
        i: 0
        i_clamp: 1
        p: 10
    joints:
    - j2n6s300_joint_finger_1
    - j2n6s300_joint_finger_2
    - j2n6s300_joint_finger_3
    type: effort_controllers/JointTrajectoryController
  effort_joint_trajectory_controller:
    constraints:
      goal_time: 1.0
      j2n6s300_joint_1:
        goal: 0.02
        trajectory: 0.05
      j2n6s300_joint_2:
        goal: 0.02
        trajectory: 0.05
      j2n6s300_joint_3:
        goal: 0.02
        trajectory: 0.05
      j2n6s300_joint_4:
        goal: 0.02
        trajectory: 0.05
      j2n6s300_joint_5:
        goal: 0.02
        trajectory: 0.05
      j2n6s300_joint_6:
        goal: 0.02
        trajectory: 0.05
      stopped_velocity_tolerance: 0.02
    gains:
      j2n6s300_joint_1:
        d: 0
        i: 0
        i_clamp: 10
        p: 5000
      j2n6s300_joint_2:
        d: 0
        i: 0
        i_clamp: 10
        p: 5000
      j2n6s300_joint_3:
        d: 0
        i: 0
        i_clamp: 10
        p: 5000
      j2n6s300_joint_4:
        d: 0
        i: 0
        i_clamp: 10
        p: 500
      j2n6s300_joint_5:
        d: 0
        i: 0
        i_clamp: 10
        p: 200
      j2n6s300_joint_6:
        d: 0
        i: 0
        i_clamp: 10
        p: 500
    joints:
    - j2n6s300_joint_1
    - j2n6s300_joint_2
    - j2n6s300_joint_3
    - j2n6s300_joint_4
    - j2n6s300_joint_5
    - j2n6s300_joint_6
    type: effort_controllers/JointTrajectoryController
  finger_1_position_controller:
    joint: j2n6s300_joint_finger_1
    pid:
      d: 0
      i: 0
      p: 10
    type: effort_controllers/JointPositionController
  finger_2_position_controller:
    joint: j2n6s300_joint_finger_2
    pid:
      d: 0
      i: 0
      p: 10
    type: effort_controllers/JointPositionController
  finger_3_position_controller:
    joint: j2n6s300_joint_finger_3
    pid:
      d: 0
      i: 0
      p: 10
    type: effort_controllers/JointPositionController
  joint_1_position_controller:
    joint: j2n6s300_joint_1
    pid:
      d: 0
      i: 0
      p: 5000
    type: effort_controllers/JointPositionController
  joint_2_position_controller:
    joint: j2n6s300_joint_2
    pid:
      d: 0
      i: 0
      p: 5000
    type: effort_controllers/JointPositionController
  joint_3_position_controller:
    joint: j2n6s300_joint_3
    pid:
      d: 0
      i: 0
      p: 5000
    type: effort_controllers/JointPositionController
  joint_4_position_controller:
    joint: j2n6s300_joint_4
    pid:
      d: 0
      i: 0
      p: 500
    type: effort_controllers/JointPositionController
  joint_5_position_controller:
    joint: j2n6s300_joint_5
    pid:
      d: 0
      i: 0
      p: 200
    type: effort_controllers/JointPositionController
  joint_6_position_controller:
    joint: j2n6s300_joint_6
    pid:
      d: 0
      i: 0
      p: 500
    type: effort_controllers/JointPositionController
  joint_state_controller:
    publish_rate: 50
    type: joint_state_controller/JointStateController
  husky_joint_publisher:
    type: joint_state_controller/JointStateController
    publish_rate: 50
  husky_velocity_controller:
    type: diff_drive_controller/DiffDriveController
    left_wheel: ['front_left_wheel', 'rear_left_wheel']
    right_wheel: ['front_right_wheel', 'rear_right_wheel']
    publish_rate: 50
    pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
    twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
    cmd_vel_timeout: 0.25
    velocity_rolling_window_size: 2

    # Base frame_id
    base_frame_id: base_link

    # Odometry fused with IMU is published by robot_localization, so
    # no need to publish a TF based on encoders alone.
    enable_odom_tf: false

    # Husky hardware provides wheel velocities
    estimate_velocity_from_position: false

    # Wheel separation and radius multipliers
    wheel_separation_multiplier: 1.875 # default: 1.0
    wheel_radius_multiplier    : 1.0 # default: 1.0

    # Velocity and acceleration limits
    # Whenever a min_* is unspecified, default to -max_*
    linear:
      x:
        has_velocity_limits    : true
        max_velocity           : 1.0   # m/s
        has_acceleration_limits: true
        max_acceleration       : 3.0   # m/s^2
    angular:
      z:
        has_velocity_limits    : true
        max_velocity           : 2.0   # rad/s
        has_acceleration_limits: true
        max_acceleration       : 6.0   # rad/s^2
